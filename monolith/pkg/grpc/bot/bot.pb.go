// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: bot.proto

package bot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StrategyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StrategyID int32 `protobuf:"varint,2,opt,name=StrategyID,proto3" json:"StrategyID,omitempty"`
	PairID     int32 `protobuf:"varint,3,opt,name=PairID,proto3" json:"PairID,omitempty"`
}

func (x *StrategyPair) Reset() {
	*x = StrategyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrategyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyPair) ProtoMessage() {}

func (x *StrategyPair) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyPair.ProtoReflect.Descriptor instead.
func (*StrategyPair) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{0}
}

func (x *StrategyPair) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *StrategyPair) GetStrategyID() int32 {
	if x != nil {
		return x.StrategyID
	}
	return 0
}

func (x *StrategyPair) GetPairID() int32 {
	if x != nil {
		return x.PairID
	}
	return 0
}

type Bot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Kind                 int32                  `protobuf:"varint,2,opt,name=Kind,proto3" json:"Kind,omitempty"`
	UserID               int32                  `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Name                 string                 `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Description          string                 `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	PairID               int32                  `protobuf:"varint,6,opt,name=PairID,proto3" json:"PairID,omitempty"`
	FixedAmount          float64                `protobuf:"fixed64,7,opt,name=FixedAmount,proto3" json:"FixedAmount,omitempty"`
	ExchangeType         int32                  `protobuf:"varint,8,opt,name=ExchangeType,proto3" json:"ExchangeType,omitempty"`
	ExchangeID           int32                  `protobuf:"varint,9,opt,name=ExchangeID,proto3" json:"ExchangeID,omitempty"`
	ExchangeUserKeyID    int32                  `protobuf:"varint,10,opt,name=ExchangeUserKeyID,proto3" json:"ExchangeUserKeyID,omitempty"`
	OrderType            int32                  `protobuf:"varint,11,opt,name=OrderType,proto3" json:"OrderType,omitempty"`
	SellPercent          float64                `protobuf:"fixed64,12,opt,name=SellPercent,proto3" json:"SellPercent,omitempty"`
	CommissionPercent    float64                `protobuf:"fixed64,13,opt,name=CommissionPercent,proto3" json:"CommissionPercent,omitempty"`
	UUID                 string                 `protobuf:"bytes,14,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Active               bool                   `protobuf:"varint,15,opt,name=Active,proto3" json:"Active,omitempty"`
	LimitOrder           bool                   `protobuf:"varint,16,opt,name=LimitOrder,proto3" json:"LimitOrder,omitempty"`
	LimitSellPercent     float64                `protobuf:"fixed64,17,opt,name=LimitSellPercent,proto3" json:"LimitSellPercent,omitempty"`
	LimitBuyPercent      float64                `protobuf:"fixed64,18,opt,name=LimitBuyPercent,proto3" json:"LimitBuyPercent,omitempty"`
	AutoSell             bool                   `protobuf:"varint,19,opt,name=AutoSell,proto3" json:"AutoSell,omitempty"`
	AutoLimitSellPercent float64                `protobuf:"fixed64,20,opt,name=AutoLimitSellPercent,proto3" json:"AutoLimitSellPercent,omitempty"`
	OrderCountLimit      bool                   `protobuf:"varint,21,opt,name=OrderCountLimit,proto3" json:"OrderCountLimit,omitempty"`
	OrderCount           int32                  `protobuf:"varint,22,opt,name=OrderCount,proto3" json:"OrderCount,omitempty"`
	Pairs                []*StrategyPair        `protobuf:"bytes,23,rep,name=Pairs,proto3" json:"Pairs,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt            *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *Bot) Reset() {
	*x = Bot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bot) ProtoMessage() {}

func (x *Bot) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bot.ProtoReflect.Descriptor instead.
func (*Bot) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{1}
}

func (x *Bot) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Bot) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *Bot) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Bot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bot) GetPairID() int32 {
	if x != nil {
		return x.PairID
	}
	return 0
}

func (x *Bot) GetFixedAmount() float64 {
	if x != nil {
		return x.FixedAmount
	}
	return 0
}

func (x *Bot) GetExchangeType() int32 {
	if x != nil {
		return x.ExchangeType
	}
	return 0
}

func (x *Bot) GetExchangeID() int32 {
	if x != nil {
		return x.ExchangeID
	}
	return 0
}

func (x *Bot) GetExchangeUserKeyID() int32 {
	if x != nil {
		return x.ExchangeUserKeyID
	}
	return 0
}

func (x *Bot) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *Bot) GetSellPercent() float64 {
	if x != nil {
		return x.SellPercent
	}
	return 0
}

func (x *Bot) GetCommissionPercent() float64 {
	if x != nil {
		return x.CommissionPercent
	}
	return 0
}

func (x *Bot) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Bot) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Bot) GetLimitOrder() bool {
	if x != nil {
		return x.LimitOrder
	}
	return false
}

func (x *Bot) GetLimitSellPercent() float64 {
	if x != nil {
		return x.LimitSellPercent
	}
	return 0
}

func (x *Bot) GetLimitBuyPercent() float64 {
	if x != nil {
		return x.LimitBuyPercent
	}
	return 0
}

func (x *Bot) GetAutoSell() bool {
	if x != nil {
		return x.AutoSell
	}
	return false
}

func (x *Bot) GetAutoLimitSellPercent() float64 {
	if x != nil {
		return x.AutoLimitSellPercent
	}
	return 0
}

func (x *Bot) GetOrderCountLimit() bool {
	if x != nil {
		return x.OrderCountLimit
	}
	return false
}

func (x *Bot) GetOrderCount() int32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *Bot) GetPairs() []*StrategyPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *Bot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bot) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Bot) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type BotCreateIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *BotCreateIn) Reset() {
	*x = BotCreateIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotCreateIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotCreateIn) ProtoMessage() {}

func (x *BotCreateIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotCreateIn.ProtoReflect.Descriptor instead.
func (*BotCreateIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{2}
}

func (x *BotCreateIn) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type BotSubscribeIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs      []int32 `protobuf:"varint,1,rep,packed,name=UserIDs,proto3" json:"UserIDs,omitempty"`
	StrategyUUID string  `protobuf:"bytes,2,opt,name=StrategyUUID,proto3" json:"StrategyUUID,omitempty"`
}

func (x *BotSubscribeIn) Reset() {
	*x = BotSubscribeIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSubscribeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSubscribeIn) ProtoMessage() {}

func (x *BotSubscribeIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSubscribeIn.ProtoReflect.Descriptor instead.
func (*BotSubscribeIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{3}
}

func (x *BotSubscribeIn) GetUserIDs() []int32 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *BotSubscribeIn) GetStrategyUUID() string {
	if x != nil {
		return x.StrategyUUID
	}
	return ""
}

type BOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool  `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorCode int32 `protobuf:"varint,2,opt,name=Error_code,json=ErrorCode,proto3" json:"Error_code,omitempty"`
}

func (x *BOut) Reset() {
	*x = BOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BOut) ProtoMessage() {}

func (x *BOut) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BOut.ProtoReflect.Descriptor instead.
func (*BOut) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{4}
}

func (x *BOut) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BOut) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type BotListIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *BotListIn) Reset() {
	*x = BotListIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotListIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotListIn) ProtoMessage() {}

func (x *BotListIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotListIn.ProtoReflect.Descriptor instead.
func (*BotListIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{5}
}

func (x *BotListIn) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type BotListOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*Bot `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Success   bool   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorCode int32  `protobuf:"varint,3,opt,name=Error_code,json=ErrorCode,proto3" json:"Error_code,omitempty"`
}

func (x *BotListOut) Reset() {
	*x = BotListOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotListOut) ProtoMessage() {}

func (x *BotListOut) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotListOut.ProtoReflect.Descriptor instead.
func (*BotListOut) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{6}
}

func (x *BotListOut) GetData() []*Bot {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BotListOut) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BotListOut) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type BotOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32             `protobuf:"varint,1,opt,name=Error_code,json=ErrorCode,proto3" json:"Error_code,omitempty"`
	Bot       *Bot              `protobuf:"bytes,2,opt,name=Bot,proto3" json:"Bot,omitempty"`
	Hooks     map[string]string `protobuf:"bytes,3,rep,name=Hooks,proto3" json:"Hooks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BotOut) Reset() {
	*x = BotOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotOut) ProtoMessage() {}

func (x *BotOut) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotOut.ProtoReflect.Descriptor instead.
func (*BotOut) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{7}
}

func (x *BotOut) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *BotOut) GetBot() *Bot {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *BotOut) GetHooks() map[string]string {
	if x != nil {
		return x.Hooks
	}
	return nil
}

type Hooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyMarket string `protobuf:"bytes,1,opt,name=BuyMarket,proto3" json:"BuyMarket,omitempty"`
}

func (x *Hooks) Reset() {
	*x = Hooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hooks) ProtoMessage() {}

func (x *Hooks) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hooks.ProtoReflect.Descriptor instead.
func (*Hooks) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{8}
}

func (x *Hooks) GetBuyMarket() string {
	if x != nil {
		return x.BuyMarket
	}
	return ""
}

type BotDeleteIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID   string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	UserID int32  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *BotDeleteIn) Reset() {
	*x = BotDeleteIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotDeleteIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotDeleteIn) ProtoMessage() {}

func (x *BotDeleteIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotDeleteIn.ProtoReflect.Descriptor instead.
func (*BotDeleteIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{9}
}

func (x *BotDeleteIn) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *BotDeleteIn) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type BotGetIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	ID   int32  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *BotGetIn) Reset() {
	*x = BotGetIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotGetIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotGetIn) ProtoMessage() {}

func (x *BotGetIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotGetIn.ProtoReflect.Descriptor instead.
func (*BotGetIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{10}
}

func (x *BotGetIn) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *BotGetIn) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type BotUpdateIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bot    *Bot    `protobuf:"bytes,1,opt,name=Bot,proto3" json:"Bot,omitempty"`
	Fields []int32 `protobuf:"varint,2,rep,packed,name=Fields,proto3" json:"Fields,omitempty"`
	Pairs  []int32 `protobuf:"varint,3,rep,packed,name=Pairs,proto3" json:"Pairs,omitempty"`
}

func (x *BotUpdateIn) Reset() {
	*x = BotUpdateIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUpdateIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUpdateIn) ProtoMessage() {}

func (x *BotUpdateIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUpdateIn.ProtoReflect.Descriptor instead.
func (*BotUpdateIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{11}
}

func (x *BotUpdateIn) GetBot() *Bot {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *BotUpdateIn) GetFields() []int32 {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *BotUpdateIn) GetPairs() []int32 {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type BotPairAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotID int32   `protobuf:"varint,1,opt,name=BotID,proto3" json:"BotID,omitempty"`
	Pairs []int32 `protobuf:"varint,2,rep,packed,name=Pairs,proto3" json:"Pairs,omitempty"`
}

func (x *BotPairAdd) Reset() {
	*x = BotPairAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotPairAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotPairAdd) ProtoMessage() {}

func (x *BotPairAdd) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotPairAdd.ProtoReflect.Descriptor instead.
func (*BotPairAdd) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{12}
}

func (x *BotPairAdd) GetBotID() int32 {
	if x != nil {
		return x.BotID
	}
	return 0
}

func (x *BotPairAdd) GetPairs() []int32 {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type BotToggleIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID   string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	UserID int32  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Active bool   `protobuf:"varint,3,opt,name=Active,proto3" json:"Active,omitempty"`
}

func (x *BotToggleIn) Reset() {
	*x = BotToggleIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotToggleIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotToggleIn) ProtoMessage() {}

func (x *BotToggleIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotToggleIn.ProtoReflect.Descriptor instead.
func (*BotToggleIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{13}
}

func (x *BotToggleIn) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *BotToggleIn) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BotToggleIn) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type WebhookSignalIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotUUID string `protobuf:"bytes,1,opt,name=BotUUID,proto3" json:"BotUUID,omitempty"`
	PairID  int32  `protobuf:"varint,2,opt,name=PairID,proto3" json:"PairID,omitempty"`
}

func (x *WebhookSignalIn) Reset() {
	*x = WebhookSignalIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookSignalIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookSignalIn) ProtoMessage() {}

func (x *WebhookSignalIn) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookSignalIn.ProtoReflect.Descriptor instead.
func (*WebhookSignalIn) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{14}
}

func (x *WebhookSignalIn) GetBotUUID() string {
	if x != nil {
		return x.BotUUID
	}
	return ""
}

func (x *WebhookSignalIn) GetPairID() int32 {
	if x != nil {
		return x.PairID
	}
	return 0
}

type WebhookSignalOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hook      string   `protobuf:"bytes,1,opt,name=Hook,proto3" json:"Hook,omitempty"`
	Signals   []string `protobuf:"bytes,2,rep,name=Signals,proto3" json:"Signals,omitempty"`
	ErrorCode int32    `protobuf:"varint,3,opt,name=Error_code,json=ErrorCode,proto3" json:"Error_code,omitempty"`
}

func (x *WebhookSignalOut) Reset() {
	*x = WebhookSignalOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookSignalOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookSignalOut) ProtoMessage() {}

func (x *WebhookSignalOut) ProtoReflect() protoreflect.Message {
	mi := &file_bot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookSignalOut.ProtoReflect.Descriptor instead.
func (*WebhookSignalOut) Descriptor() ([]byte, []int) {
	return file_bot_proto_rawDescGZIP(), []int{15}
}

func (x *WebhookSignalOut) GetHook() string {
	if x != nil {
		return x.Hook
	}
	return ""
}

func (x *WebhookSignalOut) GetSignals() []string {
	if x != nil {
		return x.Signals
	}
	return nil
}

func (x *WebhookSignalOut) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

var File_bot_proto protoreflect.FileDescriptor

var file_bot_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x62, 0x6f, 0x74,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x22, 0xa4, 0x07, 0x0a, 0x03, 0x42, 0x6f,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x44, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x75,
	0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x75, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x50, 0x61, 0x69,
	0x72, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x50, 0x61, 0x69,
	0x72, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x55, 0x55, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x04, 0x42, 0x4f, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x42, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x63, 0x0a,
	0x0a, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x6f, 0x74, 0x2e,
	0x42, 0x6f, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x06, 0x42, 0x6f, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x03,
	0x42, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x62, 0x6f, 0x74, 0x2e,
	0x42, 0x6f, 0x74, 0x52, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x48, 0x6f, 0x6f, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f,
	0x74, 0x4f, 0x75, 0x74, 0x2e, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x25, 0x0a, 0x05, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x75, 0x79,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x75,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x39, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x2e, 0x0a, 0x08, 0x42, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x57, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x12, 0x1a, 0x0a, 0x03, 0x42, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x52, 0x03, 0x42, 0x6f, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x69, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x69, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x42,
	0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x41, 0x64, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x61, 0x69, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6f,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x61, 0x69, 0x72, 0x49, 0x44, 0x22, 0x5f, 0x0a,
	0x10, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4f, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xa6,
	0x03, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x52, 0x50,
	0x43, 0x12, 0x29, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x62, 0x6f,
	0x74, 0x2e, 0x42, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x1a, 0x0b, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x1a, 0x09, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42,
	0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x1a, 0x09, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x23,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0d, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x1a, 0x0b, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4f, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x06, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12, 0x10, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x1a,
	0x09, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x13, 0x2e, 0x62, 0x6f, 0x74, 0x2e,
	0x42, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x1a, 0x09,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x13, 0x2e, 0x62, 0x6f, 0x74,
	0x2e, 0x42, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x6e, 0x1a,
	0x09, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x1a, 0x15,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x67, 0x69, 0x74, 0x2e, 0x6b, 0x61, 0x74, 0x61, 0x2e, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x6d, 0x79, 0x2f, 0x65, 0x61, 0x7a, 0x7a, 0x79, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x6c, 0x69, 0x74, 0x68, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x6f, 0x74, 0x3b, 0x62, 0x6f, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bot_proto_rawDescOnce sync.Once
	file_bot_proto_rawDescData = file_bot_proto_rawDesc
)

func file_bot_proto_rawDescGZIP() []byte {
	file_bot_proto_rawDescOnce.Do(func() {
		file_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_bot_proto_rawDescData)
	})
	return file_bot_proto_rawDescData
}

var file_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_bot_proto_goTypes = []interface{}{
	(*StrategyPair)(nil),          // 0: bot.StrategyPair
	(*Bot)(nil),                   // 1: bot.Bot
	(*BotCreateIn)(nil),           // 2: bot.BotCreateIn
	(*BotSubscribeIn)(nil),        // 3: bot.BotSubscribeIn
	(*BOut)(nil),                  // 4: bot.BOut
	(*BotListIn)(nil),             // 5: bot.BotListIn
	(*BotListOut)(nil),            // 6: bot.BotListOut
	(*BotOut)(nil),                // 7: bot.BotOut
	(*Hooks)(nil),                 // 8: bot.Hooks
	(*BotDeleteIn)(nil),           // 9: bot.BotDeleteIn
	(*BotGetIn)(nil),              // 10: bot.BotGetIn
	(*BotUpdateIn)(nil),           // 11: bot.BotUpdateIn
	(*BotPairAdd)(nil),            // 12: bot.BotPairAdd
	(*BotToggleIn)(nil),           // 13: bot.BotToggleIn
	(*WebhookSignalIn)(nil),       // 14: bot.WebhookSignalIn
	(*WebhookSignalOut)(nil),      // 15: bot.WebhookSignalOut
	nil,                           // 16: bot.BotOut.HooksEntry
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_bot_proto_depIdxs = []int32{
	0,  // 0: bot.Bot.Pairs:type_name -> bot.StrategyPair
	17, // 1: bot.Bot.CreatedAt:type_name -> google.protobuf.Timestamp
	17, // 2: bot.Bot.UpdatedAt:type_name -> google.protobuf.Timestamp
	17, // 3: bot.Bot.DeletedAt:type_name -> google.protobuf.Timestamp
	1,  // 4: bot.BotListOut.Data:type_name -> bot.Bot
	1,  // 5: bot.BotOut.Bot:type_name -> bot.Bot
	16, // 6: bot.BotOut.Hooks:type_name -> bot.BotOut.HooksEntry
	1,  // 7: bot.BotUpdateIn.Bot:type_name -> bot.Bot
	2,  // 8: bot.BotServiceGRPC.Create:input_type -> bot.BotCreateIn
	9,  // 9: bot.BotServiceGRPC.Delete:input_type -> bot.BotDeleteIn
	11, // 10: bot.BotServiceGRPC.Update:input_type -> bot.BotUpdateIn
	10, // 11: bot.BotServiceGRPC.Get:input_type -> bot.BotGetIn
	13, // 12: bot.BotServiceGRPC.Toggle:input_type -> bot.BotToggleIn
	3,  // 13: bot.BotServiceGRPC.Subscribe:input_type -> bot.BotSubscribeIn
	3,  // 14: bot.BotServiceGRPC.Unsubscribe:input_type -> bot.BotSubscribeIn
	5,  // 15: bot.BotServiceGRPC.List:input_type -> bot.BotListIn
	14, // 16: bot.BotServiceGRPC.WebhookSignal:input_type -> bot.WebhookSignalIn
	7,  // 17: bot.BotServiceGRPC.Create:output_type -> bot.BotOut
	4,  // 18: bot.BotServiceGRPC.Delete:output_type -> bot.BOut
	4,  // 19: bot.BotServiceGRPC.Update:output_type -> bot.BOut
	7,  // 20: bot.BotServiceGRPC.Get:output_type -> bot.BotOut
	4,  // 21: bot.BotServiceGRPC.Toggle:output_type -> bot.BOut
	4,  // 22: bot.BotServiceGRPC.Subscribe:output_type -> bot.BOut
	4,  // 23: bot.BotServiceGRPC.Unsubscribe:output_type -> bot.BOut
	6,  // 24: bot.BotServiceGRPC.List:output_type -> bot.BotListOut
	15, // 25: bot.BotServiceGRPC.WebhookSignal:output_type -> bot.WebhookSignalOut
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_bot_proto_init() }
func file_bot_proto_init() {
	if File_bot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrategyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotCreateIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSubscribeIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotListIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotListOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotDeleteIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotGetIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUpdateIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotPairAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotToggleIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookSignalIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookSignalOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bot_proto_goTypes,
		DependencyIndexes: file_bot_proto_depIdxs,
		MessageInfos:      file_bot_proto_msgTypes,
	}.Build()
	File_bot_proto = out.File
	file_bot_proto_rawDesc = nil
	file_bot_proto_goTypes = nil
	file_bot_proto_depIdxs = nil
}
